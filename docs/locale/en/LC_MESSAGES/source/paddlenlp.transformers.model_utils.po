# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-16 16:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../source/paddlenlp.transformers.model_utils.rst:2
msgid "model\\_utils"
msgstr ""

#~ msgid ""
#~ "基类：:class:`paddle.fluid.dygraph.layers.Layer`, "
#~ ":class:`paddlenlp.transformers.generation_utils.GenerationMixin`"
#~ msgstr ""

#~ msgid ""
#~ "The base class for all pretrained "
#~ "models. It provides some attributes and"
#~ " common methods for all pretrained "
#~ "models, including attributes `init_config`, "
#~ "`config` for initialized arguments and "
#~ "methods for saving, loading. It also "
#~ "includes some class attributes (should "
#~ "be set by derived classes): - "
#~ "`model_config_file` (str): represents the file"
#~ " name for saving and loading"
#~ msgstr ""

#~ msgid "model configuration, it's value is `model_config.json`."
#~ msgstr ""

#~ msgid ""
#~ "`resource_files_names` (dict): use this to "
#~ "map resources to specific file names "
#~ "for saving and loading."
#~ msgstr ""

#~ msgid ""
#~ "`pretrained_resource_files_map` (dict): The dict "
#~ "has the same keys as "
#~ "`resource_files_names`, the values are also"
#~ " dict mapping specific pretrained model "
#~ "name to URL linking to pretrained "
#~ "model."
#~ msgstr ""

#~ msgid ""
#~ "`pretrained_init_configuration` (dict): The dict "
#~ "has pretrained model names as keys, "
#~ "and the values are also dict "
#~ "preserving corresponding configuration for "
#~ "model initialization."
#~ msgstr ""

#~ msgid ""
#~ "`base_model_prefix` (str): represents the the"
#~ " attribute associated to the base "
#~ "model in derived classes of the "
#~ "same architecture adding layers on top"
#~ " of the base model."
#~ msgstr ""

#~ msgid ""
#~ "Instantiate an instance of `PretrainedModel`"
#~ " from a predefined model specified by"
#~ " name or path. :param "
#~ "pretrained_model_name_or_path: A name of or"
#~ " a file path to a"
#~ msgstr ""

#~ msgid "pretrained model."
#~ msgstr ""

#~ msgid "参数"
#~ msgstr ""

#~ msgid ""
#~ "position arguments for `__init__`. If "
#~ "provide, use this as position argument"
#~ " values for model initialization."
#~ msgstr ""

#~ msgid ""
#~ "keyword arguments for `__init__`. If "
#~ "provide, use this to update pre-"
#~ "defined keyword argument values for "
#~ "model initialization."
#~ msgstr ""

#~ msgid "返回"
#~ msgstr ""

#~ msgid "An instance of PretrainedModel."
#~ msgstr ""

#~ msgid "返回类型"
#~ msgstr ""

#~ msgid ""
#~ "Save model configuration and related "
#~ "resources (model state) to files under"
#~ " `save_directory`. :param save_directory: "
#~ "Directory to save files into. :type "
#~ "save_directory: str"
#~ msgstr ""

#~ msgid ""
#~ "Add a `base_model_class` attribute for "
#~ "the base class of decorated class, "
#~ "representing the base model class in "
#~ "derived classes of the same "
#~ "architecture. :param cls: the name of"
#~ " the model :type cls: class"
#~ msgstr ""

