# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-18 21:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../source/paddlenlp.transformers.unimo.modeling.rst:2
msgid "modeling"
msgstr ""

#: of paddlenlp.transformers.unimo.modeling:1
msgid "Modeling classes for UNIMO model."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOPretrainedModel:1
msgid "基类：:class:`paddlenlp.transformers.model_utils.PretrainedModel`"
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOPretrainedModel:1
msgid ""
"An abstract class for pretrained UNIMO models. It provides UNIMO related "
"`model_config_file`, `pretrained_init_configuration`, "
"`resource_files_names`, `pretrained_resource_files_map`, "
"`base_model_prefix` for downloading and loading pretrained models. See "
":class:`~paddlenlp.transformers.model_utils.PretrainedModel` for more "
"details."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel:1
#: paddlenlp.transformers.unimo.modeling.UNIMOModel:1
msgid "基类：:class:`paddlenlp.transformers.unimo.modeling.UNIMOPretrainedModel`"
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:1
msgid "The bare UNIMO Model outputting raw hidden-states."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:3
msgid ""
"This model inherits from "
":class:`~paddlenlp.transformers.model_utils.PretrainedModel`. Refer to "
"the  superclass documentation for the generic methods."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:6
msgid ""
"This model is also a `paddle.nn.Layer "
"<https://www.paddlepaddle.org.cn/documentation/docs/en/api/paddle/fluid/dygraph/layers/Layer_en.html>`__"
" subclass. Use it as a regular Paddle Layer and refer to the Paddle "
"documentation for all matter related to general usage and behavior."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel
#: paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward
#: paddlenlp.transformers.unimo.modeling.UNIMOModel
#: paddlenlp.transformers.unimo.modeling.UNIMOModel.forward
msgid "参数"
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:10
msgid ""
"Vocabulary size of `inputs_ids` in `UNIMOModel`. Also is the vocab size "
"of token embedding matrix. Defines the number of different tokens that "
"can be represented by the `inputs_ids` passed when calling `UNIMOModel`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:13
msgid ""
"Dimensionality of the embedding layers and encoder layers. Defaults to "
"`768`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:15
msgid "The number of hidden layers in the Transformer encoder. Defaults to `12`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:17
msgid ""
"Number of attention heads for each attention layer in the Transformer "
"encoder. Defaults to `12`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:20
msgid ""
"Dimensionality of the feed-forward (ff) layer in the encoder. Input "
"tensors to ff layers are firstly projected from `hidden_size` to "
"`intermediate_size`, and then projected back to `hidden_size`. Typically "
"`intermediate_size` is larger than `hidden_size`. Defaults to `3072`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:25
msgid ""
"The non-linear activation function in the feed-forward layer. "
"``\"gelu\"``, ``\"relu\"`` and any other paddle supported activation "
"functions are supported. Defaults to ``\"gelu\"``."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:29
msgid ""
"The dropout probability used in pre-process and post-precess of MHA and "
"FFN sub-layer. Defaults to 0.1."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:32
msgid ""
"The dropout probability used in MultiHeadAttention in all encoder layers "
"to drop some attention target. Defaults to `0.1`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:35
msgid ""
"Indicate whether to put layer normalization into preprocessing of MHA and"
" FFN sub-layers. If True, pre-process is layer normalization and post-"
"precess includes dropout, residual connection. Otherwise, no pre-process "
"and post-precess includes dropout, residual connection, layer "
"normalization. Defaults to `True`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:41
msgid ""
"The maximum value of the dimensionality of position encoding, which "
"dictates the maximum supported length of an input sequence. Defaults to "
"`512`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:44
msgid ""
"The vocabulary size of the `token_type_ids` passed when calling "
"`~transformers.UNIMOModel`. Defaults to `2`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:47
msgid ""
"The standard deviation of the normal initializer. Defaults to `0.02`.  .."
" note::     A normal_initializer initializes weight matrices as normal "
"distributions.     See :meth:`UNIMOPretrainedModel._init_weights()` for "
"how weights are initialized in `UNIMOModel`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:47
msgid "The standard deviation of the normal initializer. Defaults to `0.02`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:50
msgid ""
"A normal_initializer initializes weight matrices as normal distributions."
" See :meth:`UNIMOPretrainedModel._init_weights()` for how weights are "
"initialized in `UNIMOModel`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:53
msgid ""
"A special token representing the *unknown (out-of-vocabulary)* token. An "
"unknown token is set to be `unk_token` in order to be converted to an ID."
" Defaults to `17963`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:57
msgid ""
"A special token used to make arrays of tokens the same size for batching "
"purposes. Defaults to `0`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:60
msgid ""
"A special token representing the beginning of a sequence that was used "
"during pretraining. Defaults to `1`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:63
msgid ""
"A special token representing the end of a sequence that was used during "
"pretraining. Defaults to `3`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel:66
msgid ""
"A special token representing a masked token. This is the token used in "
"the masked language modeling task which the model tries to predict the "
"original unmasked ones. Defaults to `3`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:1
msgid ""
"The UNIMOModel forward method, overrides the special :meth:`__call__` "
"method."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:3
msgid ""
"Indices of input sequence tokens in the vocabulary. They are numerical "
"representations of tokens that build the input sequence. It's data type "
"should be `int64` and has a shape of  [batch_size, sequence_length]."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:7
msgid ""
"Segment token indices to indicate first and second portions of the "
"inputs. Indices can be either 0 or 1:  - 0 corresponds to a **sentence "
"A** token, - 1 corresponds to a **sentence B** token.  It's data type "
"should be `int64` and has a shape of [batch_size, sequence_length]. "
"Defaults to None, which means no segment embeddings is added to token "
"embeddings."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:7
msgid ""
"Segment token indices to indicate first and second portions of the "
"inputs. Indices can be either 0 or 1:"
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:10
msgid "0 corresponds to a **sentence A** token,"
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:11
msgid "1 corresponds to a **sentence B** token."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:13
msgid ""
"It's data type should be `int64` and has a shape of [batch_size, "
"sequence_length]. Defaults to None, which means no segment embeddings is "
"added to token embeddings."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:16
msgid ""
"Indices of positions of each input sequence tokens in the position "
"embeddings. Selected in the range ``[0, max_position_embeddings - 1]``. "
"It's data type should be `int64` and has a shape of [batch_size, "
"sequence_length]. Defaults to `None`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:21
msgid ""
"Mask used in multi-head attention to avoid performing attention to some "
"unwanted positions, usually the paddings or the subsequent positions. Its"
" data type can be int, float and bool. When the data type is bool, the "
"`masked` tokens have `False` values and the others have `True` values. "
"When the data type is int, the `masked` tokens have `0` values and the "
"others have `1` values. When the data type is float, the `masked` tokens "
"have `-INF` values and the others have `0` values. It is a tensor with "
"shape broadcasted to `[batch_size, num_attention_heads, sequence_length, "
"sequence_length]`. For example, its shape can be  [batch_size, "
"sequence_length], [batch_size, sequence_length, sequence_length], "
"[batch_size, num_attention_heads, sequence_length, sequence_length]. "
"Defaults to `None`, which means nothing needed to be prevented attention "
"to."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:32
msgid ""
"(bool, optional): Whether or not use the model cache to speed up "
"decoding. Defaults to `False`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:35
msgid ""
"It is a list, and each element in the list is `incremental_cache` "
"produced by :meth:`paddle.nn.TransformerEncoderLayer.gen_cache` method. "
"See :meth:`paddle.nn.TransformerEncoder.gen_cache` method for more "
"details. It is only used for inference and should be None for training. "
"Defaults to `None`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward
#: paddlenlp.transformers.unimo.modeling.UNIMOModel.forward
msgid "返回"
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:42
msgid ""
"If `use_cache` is False, it is a tensor representing the output of "
":class:`UNIMOModel`, with shape [batch_size, sequence_length, "
"hidden_size]. The data type is float64. Otherwise, it is a tuple, besides"
" the output of :class:`UNIMOModel`, the tuple also includes the new cache"
" which is same as input `cache` but `incremental_cache` in it has an "
"incremental length. See :meth:`paddle.nn.MultiHeadAttention.gen_cache` "
"method and :meth:`paddle.nn.MultiHeadAttention.forward` method for more "
"details."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward
#: paddlenlp.transformers.unimo.modeling.UNIMOModel.forward
msgid "返回类型"
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward:26
#: paddlenlp.transformers.unimo.modeling.UNIMOModel.forward:51
msgid "示例"
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel:1
msgid ""
"The UNIMO Model with a `language modeling` head on top designed for "
"generation tasks."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel:3
msgid "An instance of :class:`UNIMOModel`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward:1
msgid ""
"The UNIMOLMHeadModel forward method, overrides the special "
":meth:`__call__` method."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward:4
#: paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward:6
#: paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward:8
#: paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward:10
#: paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward:14
msgid "See :class:`UNIMOModel`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward:12
msgid "(bool, optional): See :class:`UNIMOModel`."
msgstr ""

#: of paddlenlp.transformers.unimo.modeling.UNIMOLMHeadModel.forward:17
msgid ""
"If `use_cache` is False, it is a tensor representing the output of "
":class:`UNIMOModel`, with shape [batch_size, sequence_length, "
"hidden_size]. The data type is float64. Otherwise, it is a tuple, besides"
" the output of :class:`UNIMOLMHeadModel`, the tuple also includes the new"
" cache which is same as input `cache` but `incremental_cache` in it has "
"an incremental length. See :meth:`paddle.nn.MultiHeadAttention.gen_cache`"
" method and :meth:`paddle.nn.MultiHeadAttention.forward` method for more "
"details."
msgstr ""

