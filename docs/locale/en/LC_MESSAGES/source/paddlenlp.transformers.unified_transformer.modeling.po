# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-18 21:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../source/paddlenlp.transformers.unified_transformer.modeling.rst:2
msgid "modeling"
msgstr ""

#: of paddlenlp.transformers.unified_transformer.modeling:1
msgid "Modeling classes for UnifiedTransformer model."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerPretrainedModel:1
msgid "基类：:class:`paddlenlp.transformers.model_utils.PretrainedModel`"
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerPretrainedModel:1
msgid ""
"An abstract class for pretrained UnifiedTransformer models. It provides  "
"UnifiedTransformer related `model_config_file`, `resource_files_names`, "
"`pretrained_resource_files_map`, `pretrained_init_configuration`, "
"`base_model_prefix` for downloading and loading pretrained models. See "
":class:`~paddlenlp.transformers.model_utils.PretrainedModel` for more "
"details."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel:1
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:1
msgid "基类：:class:`paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerPretrainedModel`"
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:1
msgid "The bare UnifiedTransformer Model outputting raw hidden-states."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:3
msgid ""
"This model inherits from "
":class:`~paddlenlp.transformers.model_utils.PretrainedModel`. Refer to "
"the superclass documentation for the generic methods."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:6
msgid ""
"This model is also a `paddle.nn.Layer <https://www.paddlepaddle.org.cn "
"/documentation/docs/en/api/paddle/fluid/dygraph/layers/Layer_en.html>`__ "
"subclass. Use it as a regular Paddle Layer and refer to the Paddle "
"documentation for all matter related to general usage and behavior."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward
msgid "参数"
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:11
msgid ""
"Vocabulary size of `inputs_ids` in :class:`UnifiedTransformerModel`. Also"
" is the vocab size of token embedding matrix."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:14
msgid ""
"Dimensionality of the embedding layers, encoder layers and pooler layer. "
"Defaults to 768."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:17
msgid "The number of hidden layers in the encoder. Defaults to 12."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:19
msgid "The number of heads in multi-head attention(MHA). Defaults to 12."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:21
msgid ""
"Dimensionality of the feed-forward layer in the encoder. Input tensors to"
" feed-forward layers are firstly projected from `hidden_size` to "
"`intermediate_size`, and then projected back to `hidden_size`. Typically "
"`intermediate_size` is larger than `hidden_size`. Defaults to 3072."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:27
msgid "The activation function in the feedforward network. Defaults to \"gelu\"."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:30
msgid ""
"The dropout probability used in pre-process and post-precess of MHA and "
"FFN sub-layer. Defaults to 0.1."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:33
msgid ""
"The dropout probability used in MHA to drop some attention target. "
"Defaults to 0.1."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:36
msgid ""
"Indicate whether to put layer normalization into preprocessing of MHA and"
" FFN sub-layers. If True, pre-process is layer normalization and post-"
"precess includes dropout, residual connection. Otherwise, no pre-process "
"and post-precess includes dropout, residual connection, layer "
"normalization. Defaults to True."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:42
msgid "The maximum length of input `position_ids`. Defaults to 512."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:44
msgid "The size of the input `token_type_ids`. Defaults to 2."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:46
msgid ""
"The standard deviation of the normal initializer. Defaults to 0.02.  .. "
"note::     A normal_initializer initializes weight matrices as normal"
"     distributions. See     "
":meth:`UnifiedTransformerPretrainedModel.init_weights` method     for how"
" weights are initialized in     :class:`UnifiedTransformerModel`."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:46
msgid "The standard deviation of the normal initializer. Defaults to 0.02."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:49
msgid ""
"A normal_initializer initializes weight matrices as normal distributions."
" See :meth:`UnifiedTransformerPretrainedModel.init_weights` method for "
"how weights are initialized in :class:`UnifiedTransformerModel`."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:55
msgid "The id of special token `unk_token`. Defaults to 0."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:57
msgid "The id of special token `pad_token`. Defaults to 0."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:59
msgid "The id of special token `bos_token`. Defaults to 1."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:61
msgid "The id of special token `eos_token`. Defaults to 2."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel:63
msgid "The id of special token `mask_token`. Defaults to 30000."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:1
msgid ""
"The UnifiedTransformerModel forward method, overrides the special "
":meth:`__call__` method."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:4
msgid ""
"Indices of input sequence tokens in the vocabulary. They are numerical "
"representations of tokens that build the input sequence. It's data type "
"should be `int64` and has a shape of [batch_size, sequence_length]."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:9
msgid ""
"Segment token indices to indicate first and second portions of the "
"inputs. Indices can be either 0 or 1:  - 0 corresponds to a **sentence "
"A** token, - 1 corresponds to a **sentence B** token.  It's data type "
"should be `int64` and has a shape of [batch_size, sequence_length]."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:9
msgid ""
"Segment token indices to indicate first and second portions of the "
"inputs. Indices can be either 0 or 1:"
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:12
msgid "0 corresponds to a **sentence A** token,"
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:13
msgid "1 corresponds to a **sentence B** token."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:15
msgid ""
"It's data type should be `int64` and has a shape of [batch_size, "
"sequence_length]."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:18
msgid ""
"The position indices of input sequence tokens. It's data type should be "
"`int64` and has a shape of [batch_size, sequence_length]."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:21
msgid ""
"A tensor used in multi-head attention to prevents attention to some "
"unwanted positions, usually the paddings or the subsequent positions. It "
"is a tensor with shape broadcasted to [batch_size, n_head, "
"sequence_length, sequence_length].  - When the data type is bool, the "
"unwanted positions have   `False` values and the others have `True` "
"values. - When the data type is int, the unwanted positions have 0   "
"values and the others have 1 values. - When the data type is float, the "
"unwanted positions have   `-INF` values and the others have 0 values."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:21
msgid ""
"A tensor used in multi-head attention to prevents attention to some "
"unwanted positions, usually the paddings or the subsequent positions. It "
"is a tensor with shape broadcasted to [batch_size, n_head, "
"sequence_length, sequence_length]."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:26
msgid ""
"When the data type is bool, the unwanted positions have `False` values "
"and the others have `True` values."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:28
msgid ""
"When the data type is int, the unwanted positions have 0 values and the "
"others have 1 values."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:30
msgid ""
"When the data type is float, the unwanted positions have `-INF` values "
"and the others have 0 values."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:33
msgid ""
"(bool, optional): Whether or not use the model cache to speed up "
"decoding. Defaults to False."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:36
msgid ""
"It is a list, and each element in the list is `incremental_cache` "
"produced by :meth:`paddle.nn.TransformerEncoderLayer.gen_cache` method. "
"See :meth:`paddle.nn.TransformerEncoder.gen_cache` method for more "
"details. It is only used for inference and should be None for training. "
"Defaults to None."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:42
msgid ""
"Indices of role ids indicated different roles.  It's data type should be "
"`int64` and has a shape of [batch_size, sequence_length]. Defaults to "
"None."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:43
msgid "Indices of role ids indicated different roles."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:44
msgid "It's data type should be `int64` and has a shape of"
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:45
msgid "[batch_size, sequence_length]. Defaults to None."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward
msgid "返回"
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:48
msgid ""
"If `use_cache` is False, it is a tensor representing the output of "
":class:`UnifiedTransformerModel`, with shape [batch_size, "
"sequence_length, hidden_size]. The data type is float32 or float64. "
"Otherwise, it is a tuple, besides the output of "
":class:`UnifiedTransformerModel`, the tuple also includes the new cache "
"which is same as input `cache` but `incremental_cache` in it has an "
"incremental length. See :meth:`paddle.nn.MultiHeadAttention.gen_cache` "
"method and :meth:`paddle.nn.MultiHeadAttention.forward` method for more "
"details."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward
msgid "返回类型"
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward:31
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerModel.forward:60
msgid "示例"
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel:1
msgid ""
"The UnifiedTransformer Model with a language modeling head on top for "
"generation tasks."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel:4
msgid "An instance of :class:`UnifiedTransformerModel`."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward:1
msgid ""
"The UnifiedTransformerLMHeadModel forward method, overrides the special "
":meth:`__call__` method."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward:4
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward:6
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward:8
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward:10
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward:14
msgid "See :class:`UnifiedTransformerModel`."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward:12
msgid "(bool, optional): See :class:`UnifiedTransformerModel`."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward:16
msgid "(Tensor, optional): See :class:`UnifiedTransformerModel`."
msgstr ""

#: of
#: paddlenlp.transformers.unified_transformer.modeling.UnifiedTransformerLMHeadModel.forward:19
msgid ""
"If `use_cache` is False, it is a tensor representing the output of "
":class:`UnifiedTransformerLMHeadModel`, with shape [batch_size, "
"sequence_length, vocab_size]. The data type is float32 or float64. "
"Otherwise, it is a tuple, besides the output of "
":class:`UnifiedTransformerLMHeadModel`, the tuple also includes the new "
"cache which is same as input `cache` but `incremental_cache` in it has an"
" incremental length. See :meth:`paddle.nn.MultiHeadAttention.gen_cache` "
"method and :meth:`paddle.nn.MultiHeadAttention.forward` method for more "
"details."
msgstr ""

