# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-19 14:17+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../source/paddlenlp.trainer.trainer_callback.rst:2
msgid "trainer\\_callback"
msgstr ""

#: of paddlenlp.trainer.trainer_callback:1
msgid "Callbacks to use with the Trainer class and customize the training loop."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:1
#: paddlenlp.trainer.trainer_callback.TrainerControl:1
#: paddlenlp.trainer.trainer_callback.TrainerState:1
msgid "基类：:class:`object`"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:1
msgid ""
"A class containing the [`Trainer`] inner state that will be saved along "
"the model and optimizer when checkpointing and passed to the "
"[`TrainerCallback`]."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:4
msgid "<Tip>"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:6
msgid ""
"In all this class, one step is to be understood as one update step. When "
"using gradient accumulation, one update step may require several forward "
"and backward passes: if you use `gradient_accumulation_steps=n`, then one"
" update step requires going through *n* batches."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:10
msgid "</Tip>"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.EarlyStoppingCallback
#: paddlenlp.trainer.trainer_callback.TrainerCallback
#: paddlenlp.trainer.trainer_callback.TrainerControl
#: paddlenlp.trainer.trainer_callback.TrainerState
msgid "参数"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:12
msgid ""
"Only set during training, will represent the epoch the training is at "
"(the decimal part being the percentage of the current epoch completed)."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:15
msgid "During training, represents the number of update steps completed."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:17
msgid "The number of update steps to do during the current training."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:19
msgid ""
"The total number of floating operations done by the model since the "
"beginning of training (stored as floats to avoid overflow)."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:22
msgid "The list of logs done since the beginning of training."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:24
msgid ""
"When tracking the best model, the value of the best metric encountered so"
" far."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:26
msgid ""
"When tracking the best model, the value of the name of the checkpoint for"
" the best model encountered so far."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:29
msgid ""
"Whether or not this process is the local (e.g., on one machine if "
"training in a distributed fashion on several machines) main process."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState:32
msgid ""
"Whether or not this process is the global main process (when training in "
"a distributed fashion on several machines, this is only going to be "
"`True` for one process)."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState.save_to_json:1
msgid "Save the content of this instance in JSON format inside `json_path`."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerState.load_from_json:1
msgid "Create an instance from the content of `json_path`."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:1
msgid ""
"A class that handles the [`Trainer`] control flow. This class is used by "
"the [`TrainerCallback`] to activate some switches in the training loop."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:4
msgid ""
"Whether or not the training should be interrupted.  If `True`, this "
"variable will not be set back to `False`. The training will just stop."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:4
msgid "Whether or not the training should be interrupted."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:6
msgid ""
"If `True`, this variable will not be set back to `False`. The training "
"will just stop."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:8
msgid ""
"Whether or not the current epoch should be interrupted.  If `True`, this "
"variable will be set back to `False` at the beginning of the next epoch."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:8
msgid "Whether or not the current epoch should be interrupted."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:10
msgid ""
"If `True`, this variable will be set back to `False` at the beginning of "
"the next epoch."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:12
msgid ""
"Whether or not the model should be saved at this step.  If `True`, this "
"variable will be set back to `False` at the beginning of the next step."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:12
msgid "Whether or not the model should be saved at this step."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:14
#: paddlenlp.trainer.trainer_callback.TrainerControl:18
#: paddlenlp.trainer.trainer_callback.TrainerControl:22
msgid ""
"If `True`, this variable will be set back to `False` at the beginning of "
"the next step."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:16
msgid ""
"Whether or not the model should be evaluated at this step.  If `True`, "
"this variable will be set back to `False` at the beginning of the next "
"step."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:16
msgid "Whether or not the model should be evaluated at this step."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:20
msgid ""
"Whether or not the logs should be reported at this step.  If `True`, this"
" variable will be set back to `False` at the beginning of the next step."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerControl:20
msgid "Whether or not the logs should be reported at this step."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:1
msgid ""
"A class for objects that will inspect the state of the training loop at "
"some events and take some decisions. At each of those events the "
"following arguments are available:"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:4
msgid "The training arguments used to instantiate the [`Trainer`]."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:6
msgid "The current state of the [`Trainer`]."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:8
msgid ""
"The object that is returned to the [`Trainer`] and can be used to make "
"some decisions."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:10
msgid "The model being trained."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:12
msgid "The tokenizer used for encoding the data."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:14
msgid "The optimizer used for the training steps."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:16
msgid "The scheduler used for setting the learning rate."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:18
#: paddlenlp.trainer.trainer_callback.TrainerCallback:20
msgid "The current dataloader used for training."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:22
msgid ""
"The metrics computed by the last evaluation phase.  Those are only "
"accessible in the event `on_evaluate`."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:22
msgid "The metrics computed by the last evaluation phase."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:24
msgid "Those are only accessible in the event `on_evaluate`."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:26
msgid "The values to log.  Those are only accessible in the event `on_log`."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:26
msgid "The values to log."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:28
msgid "Those are only accessible in the event `on_log`."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:31
msgid ""
"The `control` object is the only one that can be changed by the callback,"
" in which case the event that changes it should return the modified "
"version."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:34
msgid ""
"The argument `args`, `state` and `control` are positionals for all "
"events, all the others are grouped in `kwargs`. You can unpack the ones "
"you need in the signature of the event using them. As an example, see the"
" code of the simple [`~transformer.PrinterCallback`]."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:38
msgid "Example:"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:40
msgid "```python class PrinterCallback(TrainerCallback):"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:44
msgid "def on_log(self, args, state, control, logs=None, **kwargs):"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:43
msgid "_ = logs.pop(\"total_flos\", None) if state.is_local_process_zero:"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:45
msgid "print(logs)"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.TrainerCallback:46
msgid "```"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_init_end:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_init_end:1
msgid "Event called at the end of the initialization of the [`Trainer`]."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_train_begin:1
#: paddlenlp.trainer.trainer_callback.EarlyStoppingCallback.on_train_begin:1
#: paddlenlp.trainer.trainer_callback.ProgressCallback.on_train_begin:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_train_begin:1
msgid "Event called at the beginning of training."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_train_end:1
#: paddlenlp.trainer.trainer_callback.ProgressCallback.on_train_end:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_train_end:1
msgid "Event called at the end of training."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_epoch_begin:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_epoch_begin:1
msgid "Event called at the beginning of an epoch."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_epoch_end:1
#: paddlenlp.trainer.trainer_callback.DefaultFlowCallback.on_epoch_end:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_epoch_end:1
msgid "Event called at the end of an epoch."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_step_begin:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_step_begin:1
msgid ""
"Event called at the beginning of a training step. If using gradient "
"accumulation, one training step might take several inputs."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_substep_end:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_substep_end:1
msgid "Event called at the end of an substep during gradient accumulation."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_step_end:1
#: paddlenlp.trainer.trainer_callback.DefaultFlowCallback.on_step_end:1
#: paddlenlp.trainer.trainer_callback.ProgressCallback.on_step_end:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_step_end:1
msgid ""
"Event called at the end of a training step. If using gradient "
"accumulation, one training step might take several inputs."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_evaluate:1
#: paddlenlp.trainer.trainer_callback.EarlyStoppingCallback.on_evaluate:1
#: paddlenlp.trainer.trainer_callback.ProgressCallback.on_evaluate:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_evaluate:1
msgid "Event called after an evaluation phase."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_save:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_save:1
msgid "Event called after a checkpoint save."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_log:1
#: paddlenlp.trainer.trainer_callback.PrinterCallback.on_log:1
#: paddlenlp.trainer.trainer_callback.ProgressCallback.on_log:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_log:1
msgid "Event called after logging the last logs."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler.on_prediction_step:1
#: paddlenlp.trainer.trainer_callback.ProgressCallback.on_prediction_step:1
#: paddlenlp.trainer.trainer_callback.TrainerCallback.on_prediction_step:1
msgid "Event called after a prediction step."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler:1
#: paddlenlp.trainer.trainer_callback.DefaultFlowCallback:1
#: paddlenlp.trainer.trainer_callback.EarlyStoppingCallback:1
#: paddlenlp.trainer.trainer_callback.PrinterCallback:1
#: paddlenlp.trainer.trainer_callback.ProgressCallback:1
msgid "基类：:class:`paddlenlp.trainer.trainer_callback.TrainerCallback`"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.CallbackHandler:1
msgid "Internal class that just calls the list of callbacks in order."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.DefaultFlowCallback:1
msgid ""
"A [`TrainerCallback`] that handles the default flow of the training loop "
"for logs, evaluation and checkpoints."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.ProgressCallback:1
msgid ""
"A [`TrainerCallback`] that displays the progress of training or "
"evaluation."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.PrinterCallback:1
msgid "A bare [`TrainerCallback`] that just prints the logs."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.EarlyStoppingCallback:1
msgid "A [`TrainerCallback`] that handles early stopping."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.EarlyStoppingCallback:3
msgid ""
"Use with `metric_for_best_model` to stop training when the specified "
"metric worsens for `early_stopping_patience` evaluation calls."
msgstr ""

#: of paddlenlp.trainer.trainer_callback.EarlyStoppingCallback:6
msgid ""
"Use with TrainingArguments `metric_for_best_model` and "
"`early_stopping_patience` to denote how much the specified metric must "
"improve to satisfy early stopping conditions. `"
msgstr ""

#: of paddlenlp.trainer.trainer_callback.EarlyStoppingCallback:10
msgid ""
"This callback depends on [`TrainingArguments`] argument "
"*load_best_model_at_end* functionality to set best_metric in "
"[`TrainerState`]."
msgstr ""

