# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-18 21:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../source/paddlenlp.transformers.ppminilm.modeling.rst:2
msgid "modeling"
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification:1
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:1
msgid "基类：:class:`paddlenlp.transformers.ppminilm.modeling.PPMiniLMPretrainedModel`"
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:1
msgid "The bare PPMiniLM Model transformer outputting raw hidden-states."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:3
msgid ""
"This model inherits from "
":class:`~paddlenlp.transformers.model_utils.PretrainedModel`. Refer to "
"the superclass documentation for the generic methods."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:6
msgid ""
"This model is also a Paddle `paddle.nn.Layer "
"<https://www.paddlepaddle.org.cn/documentation "
"/docs/en/api/paddle/fluid/dygraph/layers/Layer_en.html>`__ subclass. Use "
"it as a regular Paddle Layer and refer to the Paddle documentation for "
"all matter related to general usage and behavior."
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification.forward
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward
msgid "参数"
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:10
msgid ""
"Vocabulary size of `inputs_ids` in `PPMiniLMModel`. Also is the vocab "
"size of token embedding matrix. Defines the number of different tokens "
"that can be represented by the `inputs_ids` passed when calling "
"`PPMiniLMModel`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:13
msgid ""
"Dimensionality of the embedding layer, encoder layers and pooler layer. "
"Defaults to `768`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:15
msgid "Number of hidden layers in the Transformer encoder. Defaults to `12`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:17
msgid ""
"Number of attention heads for each attention layer in the Transformer "
"encoder. Defaults to `12`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:20
msgid ""
"Dimensionality of the feed-forward (ff) layer in the encoder. Input "
"tensors to ff layers are firstly projected from `hidden_size` to "
"`intermediate_size`, and then projected back to `hidden_size`. Typically "
"`intermediate_size` is larger than `hidden_size`. Defaults to `3072`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:25
msgid ""
"The non-linear activation function in the feed-forward layer. "
"``\"gelu\"``, ``\"relu\"`` and any other paddle supported activation "
"functions are supported. Defaults to `\"gelu\"`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:29
msgid ""
"The dropout probability for all fully connected layers in the embeddings "
"and encoder. Defaults to `0.1`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:32
msgid ""
"The dropout probability used in MultiHeadAttention in all encoder layers "
"to drop some attention target. Defaults to `0.1`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:35
msgid ""
"The maximum value of the dimensionality of position encoding, which "
"dictates the maximum supported length of an input sequence. Defaults to "
"`512`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:38
msgid "The vocabulary size of the `token_type_ids`. Defaults to `2`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:41
msgid ""
"The standard deviation of the normal initializer for initializing all "
"weight matrices. Defaults to `0.02`.  .. note::     A normal_initializer "
"initializes weight matrices as normal distributions.     See "
":meth:`PPMiniLMPretrainedModel._init_weights()` for how weights are "
"initialized in `PPMiniLMModel`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:41
msgid ""
"The standard deviation of the normal initializer for initializing all "
"weight matrices. Defaults to `0.02`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:45
msgid ""
"A normal_initializer initializes weight matrices as normal distributions."
" See :meth:`PPMiniLMPretrainedModel._init_weights()` for how weights are "
"initialized in `PPMiniLMModel`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel:48
msgid "The index of padding token in the token vocabulary. Defaults to `0`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:1
msgid ""
"If `input_ids` is a Tensor object, it is an indices of input sequence "
"tokens in the vocabulary. They are numerical representations of tokens "
"that build the input sequence. It's data type should be `int64` and has a"
" shape of [batch_size, sequence_length]. If `input_ids` is a list of "
"string, `self.use_faster_tokenizer` should be True, and the network "
"contains `faster_tokenizer` operator."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:9
msgid ""
"If `token_type_ids` is a Tensor object: Segment token indices to indicate"
" different portions of the inputs. Selected in the range ``[0, "
"type_vocab_size - 1]``. If `type_vocab_size` is 2, which means the inputs"
" have two portions. Indices can either be 0 or 1:  - 0 corresponds to a "
"*sentence A* token, - 1 corresponds to a *sentence B* token.  Its data "
"type should be `int64` and it has a shape of [batch_size, "
"sequence_length]. Defaults to `None`, which means we don't add segment "
"embeddings.  If `token_type_ids` is a list of string: "
"`self.use_faster_tokenizer` should be True, and the network contains "
"`faster_tokenizer` operator."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:9
msgid ""
"If `token_type_ids` is a Tensor object: Segment token indices to indicate"
" different portions of the inputs. Selected in the range ``[0, "
"type_vocab_size - 1]``. If `type_vocab_size` is 2, which means the inputs"
" have two portions. Indices can either be 0 or 1:"
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:15
msgid "0 corresponds to a *sentence A* token,"
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:16
msgid "1 corresponds to a *sentence B* token."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:18
msgid ""
"Its data type should be `int64` and it has a shape of [batch_size, "
"sequence_length]. Defaults to `None`, which means we don't add segment "
"embeddings."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:21
msgid ""
"If `token_type_ids` is a list of string: `self.use_faster_tokenizer` "
"should be True, and the network contains `faster_tokenizer` operator."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:24
msgid ""
"Indices of positions of each input sequence tokens in the position "
"embeddings. Selected in the range ``[0, max_position_embeddings - 1]``. "
"Shape as `[batch_size, num_tokens]` and dtype as int64. Defaults to "
"`None`."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:28
msgid ""
"Mask used in multi-head attention to avoid performing attention on to "
"some unwanted positions, usually the paddings or the subsequent "
"positions. Its data type can be int, float and bool. When the data type "
"is bool, the `masked` tokens have `False` values and the others have "
"`True` values. When the data type is int, the `masked` tokens have `0` "
"values and the others have `1` values. When the data type is float, the "
"`masked` tokens have `-INF` values and the others have `0` values. It is "
"a tensor with shape broadcasted to `[batch_size, num_attention_heads, "
"sequence_length, sequence_length]`. For example, its shape can be  "
"[batch_size, sequence_length], [batch_size, sequence_length, "
"sequence_length], [batch_size, num_attention_heads, sequence_length, "
"sequence_length]. We use whole-word-mask in PPMiniLM, so the whole word "
"will have the same value. For example, \"使用\" as a word, \"使\" and \"用\" "
"will have the same value. Defaults to `None`, which means nothing needed "
"to be prevented attention to."
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification.forward
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward
msgid "返回"
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:42
msgid ""
"Returns tuple (``sequence_output``, ``pooled_output``).  With the fields:"
"  - `sequence_output` (Tensor):     Sequence of hidden-states at the last"
" layer of the model.     It's data type should be float32 and its shape "
"is [batch_size, sequence_length, hidden_size].  - `pooled_output` "
"(Tensor):     The output of first token (`[CLS]`) in sequence.     We "
"\"pool\" the model by simply taking the hidden state corresponding to the"
" first token.     Its data type should be float32 and its shape is "
"[batch_size, hidden_size]."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:42
msgid "Returns tuple (``sequence_output``, ``pooled_output``)."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:44
msgid "With the fields:"
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:48
msgid "`sequence_output` (Tensor):"
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:47
msgid ""
"Sequence of hidden-states at the last layer of the model. It's data type "
"should be float32 and its shape is [batch_size, sequence_length, "
"hidden_size]."
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:52
msgid "`pooled_output` (Tensor):"
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:51
msgid ""
"The output of first token (`[CLS]`) in sequence. We \"pool\" the model by"
" simply taking the hidden state corresponding to the first token. Its "
"data type should be float32 and its shape is [batch_size, hidden_size]."
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification.forward
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward
msgid "返回类型"
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification.forward:15
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMModel.forward:57
msgid "示例"
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMPretrainedModel:1
msgid "基类：:class:`paddlenlp.experimental.model_utils.FasterPretrainedModel`"
msgstr ""

#: of paddlenlp.transformers.ppminilm.modeling.PPMiniLMPretrainedModel:1
msgid ""
"An abstract class for pretrained PPMiniLM models. It provides PPMiniLM "
"related `model_config_file`, `pretrained_init_configuration`, "
"`resource_files_names`, `pretrained_resource_files_map`, "
"`base_model_prefix` for downloading and loading pretrained models. Refer "
"to :class:`~paddlenlp.transformers.model_utils.PretrainedModel` for more "
"details."
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMPretrainedModel.init_weights:1
msgid "Initialization hook"
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification:1
msgid ""
"PPMiniLM Model with a linear layer on top of the output layer, designed "
"for sequence classification/regression tasks like GLUE tasks."
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification:4
msgid "An instance of `paddlenlp.transformers.PPMiniLMModel`."
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification:6
msgid "The number of classes. Default to `2`."
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification:8
msgid ""
"The dropout probability for output of PPMiniLM. If None, use the same "
"value as `hidden_dropout_prob` of `paddlenlp.transformers.PPMiniLMModel` "
"instance. Defaults to `None`."
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification.forward:1
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification.forward:3
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification.forward:5
msgid "See :class:`PPMiniLMModel`."
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification.forward:7
msgid "See :class:`MiniLMModel`."
msgstr ""

#: of
#: paddlenlp.transformers.ppminilm.modeling.PPMiniLMForSequenceClassification.forward:10
msgid ""
"Returns tensor `logits`, a tensor of the input text classification "
"logits. Shape as `[batch_size, num_classes]` and dtype as float32."
msgstr ""

