# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-18 21:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../source/paddlenlp.transformers.mpnet.modeling.rst:2
msgid "modeling"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM:1
#: paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice:1
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering:1
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification:1
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification:1
#: paddlenlp.transformers.mpnet.modeling.MPNetModel:1
msgid "基类：:class:`paddlenlp.transformers.mpnet.modeling.MPNetPretrainedModel`"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:1
msgid "The bare MPNet Model transformer outputting raw hidden-states."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:3
msgid ""
"This model inherits from "
":class:`~paddlenlp.transformers.model_utils.PretrainedModel`. Refer to "
"the superclass documentation for the generic methods."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:6
msgid ""
"This model is also a Paddle `paddle.nn.Layer "
"<https://www.paddlepaddle.org.cn/documentation "
"/docs/en/api/paddle/fluid/dygraph/layers/Layer_en.html>`__ subclass. Use "
"it as a regular Paddle Layer and refer to the Paddle documentation for "
"all matter related to general usage and behavior."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM
#: paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice
#: paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetModel
#: paddlenlp.transformers.mpnet.modeling.MPNetModel.forward
msgid "参数"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:10
msgid ""
"Vocabulary size of `inputs_ids` in `MPNetModel`. Also is the vocab size "
"of token embedding matrix. Defines the number of different tokens that "
"can be represented by the `inputs_ids` passed when calling `MPNetModel`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:13
msgid ""
"Dimensionality of the embedding layer, encoder layer and pooler layer. "
"Defaults to `768`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:15
msgid "Number of hidden layers in the Transformer encoder. Defaults to `12`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:17
msgid ""
"Number of attention heads for each attention layer in the Transformer "
"encoder. Defaults to `12`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:20
msgid ""
"Dimensionality of the feed-forward (ff) layer in the encoder. Input "
"tensors to ff layers are firstly projected from `hidden_size` to "
"`intermediate_size`, and then projected back to `hidden_size`. Typically "
"`intermediate_size` is larger than `hidden_size`. Defaults to `3072`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:25
msgid ""
"The non-linear activation function in the feed-forward layer. "
"``\"gelu\"``, ``\"relu\"`` and any other paddle supported activation "
"functions are supported. Defaults to `\"gelu\"`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:29
msgid ""
"The dropout probability for all fully connected layers in the embeddings "
"and encoder. Defaults to `0.1`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:32
msgid ""
"The dropout probability used in MultiHeadAttention in all encoder layers "
"to drop some attention target. Defaults to `0.1`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:35
msgid ""
"The maximum value of the dimensionality of position encoding, which "
"dictates the maximum supported length of an input sequence. Defaults to "
"`514`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:38
msgid ""
"The standard deviation of the normal initializer. Defaults to 0.02.  .. "
"note::     A normal_initializer initializes weight matrices as normal "
"distributions.     See :meth:`MPNetPretrainedModel.init_weights()` for "
"how weights are initialized in `MPNetModel`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:38
msgid "The standard deviation of the normal initializer. Defaults to 0.02."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:42
msgid ""
"A normal_initializer initializes weight matrices as normal distributions."
" See :meth:`MPNetPretrainedModel.init_weights()` for how weights are "
"initialized in `MPNetModel`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:45
msgid "The number of buckets to use for each attention layer. Defaults to `32`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:48
msgid "The epsilon used by the layer normalization layers. Defaults to `1e-5`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel:51
msgid "The index of padding token in the token vocabulary. Defaults to `1`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:1
msgid "The MPNetModel forward method, overrides the `__call__()` special method."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:3
msgid ""
"Indices of input sequence tokens in the vocabulary. They are numerical "
"representations of tokens that build the input sequence. Its data type "
"should be `int64` and it has a shape of [batch_size, sequence_length]."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:7
msgid ""
"Indices of positions of each input sequence tokens in the position "
"embeddings. Selected in the range ``[0, max_position_embeddings - 1]``. "
"Shape as `(batch_size, num_tokens)` and dtype as int64. Defaults to "
"`None`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:11
msgid ""
"Mask used in multi-head attention to avoid performing attention on to "
"some unwanted positions, usually the paddings or the subsequent "
"positions. Its data type can be int, float and bool. If its data type is "
"int, the values should be either 0 or 1.  - **1** for tokens that **not "
"masked**, - **0** for tokens that **masked**.  It is a tensor with shape "
"broadcasted to `[batch_size, num_attention_heads, sequence_length, "
"sequence_length]`. Defaults to `None`, which means nothing needed to be "
"prevented attention to."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:11
msgid ""
"Mask used in multi-head attention to avoid performing attention on to "
"some unwanted positions, usually the paddings or the subsequent "
"positions. Its data type can be int, float and bool. If its data type is "
"int, the values should be either 0 or 1."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:16
msgid "**1** for tokens that **not masked**,"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:17
msgid "**0** for tokens that **masked**."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:19
msgid ""
"It is a tensor with shape broadcasted to `[batch_size, "
"num_attention_heads, sequence_length, sequence_length]`. Defaults to "
"`None`, which means nothing needed to be prevented attention to."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetModel.forward
msgid "返回"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:23
msgid ""
"Returns tuple (`sequence_output`, `pooled_output`).  With the fields:  - "
"`sequence_output` (Tensor):     Sequence of hidden-states at the last "
"layer of the model.     It's data type should be float32 and its shape is"
" [batch_size, sequence_length, hidden_size].  - `pooled_output` (Tensor):"
"     The output of first token (`<s>`) in sequence.     We \"pool\" the "
"model by simply taking the hidden state corresponding to the first token."
"     Its data type should be float32 and its shape is [batch_size, "
"hidden_size]."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:23
msgid "Returns tuple (`sequence_output`, `pooled_output`)."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:12
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:12
#: paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:25
msgid "With the fields:"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:20
#: paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:29
msgid "`sequence_output` (Tensor):"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:28
msgid ""
"Sequence of hidden-states at the last layer of the model. It's data type "
"should be float32 and its shape is [batch_size, sequence_length, "
"hidden_size]."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:33
msgid "`pooled_output` (Tensor):"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:32
msgid ""
"The output of first token (`<s>`) in sequence. We \"pool\" the model by "
"simply taking the hidden state corresponding to the first token. Its data"
" type should be float32 and its shape is [batch_size, hidden_size]."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification.forward
#: paddlenlp.transformers.mpnet.modeling.MPNetModel.forward
msgid "返回类型"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice.forward:15
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:24
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification.forward:15
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification.forward:15
#: paddlenlp.transformers.mpnet.modeling.MPNetModel.forward:38
msgid "示例"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetPretrainedModel:1
msgid "基类：:class:`paddlenlp.transformers.model_utils.PretrainedModel`"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetPretrainedModel:1
msgid ""
"An abstract class for pretrained MPNet models. It provides MPNet related "
"`model_config_file`, `resource_files_names`, "
"`pretrained_resource_files_map`, `pretrained_init_configuration`, "
"`base_model_prefix` for downloading and loading pretrained models. See "
":class:`~paddlenlp.transformers.model_utils.PretrainedModel` for more "
"details."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetPretrainedModel.init_weights:1
msgid "Initialization hook"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM:1
msgid "MPNet Model with a `language modeling` head on top."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM:3
msgid "An instance of :class:`MPNetModel`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:1
#: paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:3
#: paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:5
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:3
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:5
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:7
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification.forward:3
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification.forward:5
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification.forward:7
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification.forward:3
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification.forward:5
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification.forward:7
msgid "See :class:`MPNetModel`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:7
msgid ""
"The Labels for computing the masked language modeling loss. Indices "
"should be in ``[-100, 0, ..., vocab_size]`` Tokens with indices set to "
"``-100`` are ignored (masked), the loss is only computed for the tokens "
"with labels in ``[0, ..., vocab_size]`` Its shape is [batch_size, "
"sequence_length]."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:10
msgid ""
"Returns tuple (`masked_lm_loss`, `prediction_scores`, "
"``sequence_output`).  With the fields:  - `masked_lm_loss` (Tensor):     "
"The masked lm loss. Its data type should be float32 and its shape is [1]."
"  - `prediction_scores` (Tensor):     The scores of masked token "
"prediction. Its data type should be float32. Its shape is [batch_size, "
"sequence_length, vocab_size].  - `sequence_output` (Tensor):     Sequence"
" of hidden-states at the last layer of the model. Its data type should be"
" float32. Its shape is `[batch_size, sequence_length, hidden_size]`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:10
msgid "Returns tuple (`masked_lm_loss`, `prediction_scores`, ``sequence_output`)."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:15
msgid "`masked_lm_loss` (Tensor):"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:15
msgid "The masked lm loss. Its data type should be float32 and its shape is [1]."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:18
msgid "`prediction_scores` (Tensor):"
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:18
msgid ""
"The scores of masked token prediction. Its data type should be float32. "
"Its shape is [batch_size, sequence_length, vocab_size]."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMaskedLM.forward:21
msgid ""
"Sequence of hidden-states at the last layer of the model. Its data type "
"should be float32. Its shape is `[batch_size, sequence_length, "
"hidden_size]`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification:1
msgid ""
"MPNet Model with a linear layer on top of the output layer, designed for "
"sequence classification/regression tasks like GLUE tasks."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice:4
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering:4
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification:4
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification:4
msgid "An instance of MPNetModel."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering:6
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification:6
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification:6
msgid "The number of classes. Defaults to `2`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice:8
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification:8
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification:8
msgid ""
"The dropout probability for output of MPNet. If None, use the same value "
"as `hidden_dropout_prob` of `MPNetModel` instance `mpnet`. Defaults to "
"None."
msgstr ""

#: of
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification.forward:1
msgid ""
"The MPNetForSequenceClassification forward method, overrides the "
"__call__() special method."
msgstr ""

#: of
#: paddlenlp.transformers.mpnet.modeling.MPNetForSequenceClassification.forward:10
msgid ""
"Returns tensor `logits`, a tensor of the input text classification "
"logits. Shape as `[batch_size, num_classes]` and dtype as float32."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice:1
msgid ""
"MPNet Model with a linear layer on top of the hidden-states output layer,"
" designed for multiple choice tasks like RocStories/SWAG tasks."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice:6
msgid "The number of choices. Defaults to `2`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice.forward:1
msgid ""
"The MPNetForMultipleChoice forward method, overrides the __call__() "
"special method."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice.forward:3
#: paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice.forward:5
#: paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice.forward:7
msgid ""
"See :class:`MPNetModel` and shape as [batch_size, num_choice, "
"sequence_length]."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForMultipleChoice.forward:10
msgid ""
"Returns tensor `reshaped_logits`, a tensor of the multiple choice "
"classification logits. Shape as `[batch_size, num_choice]` and dtype as "
"`float32`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification:1
msgid ""
"MPNet Model with a linear layer on top of the hidden-states output layer,"
" designed for token classification tasks like NER tasks."
msgstr ""

#: of
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification.forward:1
msgid ""
"The MPNetForTokenClassification forward method, overrides the __call__() "
"special method."
msgstr ""

#: of
#: paddlenlp.transformers.mpnet.modeling.MPNetForTokenClassification.forward:10
msgid ""
"Returns tensor `logits`, a tensor of the input token classification "
"logits. Shape as `[batch_size, sequence_length, num_classes]` and dtype "
"as `float32`."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering:1
msgid ""
"MPNet Model with a linear layer on top of the hidden-states output to "
"compute `span_start_logits` and `span_end_logits`, designed for question-"
"answering tasks like SQuAD."
msgstr ""

#: of paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:1
msgid ""
"The MPNetForQuestionAnswering forward method, overrides the __call__() "
"special method."
msgstr ""

#: of
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:10
msgid ""
"Returns tuple (`start_logits`, `end_logits`).  With the fields:  - "
"`start_logits` (Tensor):     A tensor of the input token classification "
"logits, indicates the start position of the labelled span.     Its data "
"type should be float32 and its shape is [batch_size, sequence_length].  -"
" `end_logits` (Tensor):     A tensor of the input token classification "
"logits, indicates the end position of the labelled span.     Its data "
"type should be float32 and its shape is [batch_size, sequence_length]."
msgstr ""

#: of
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:10
msgid "Returns tuple (`start_logits`, `end_logits`)."
msgstr ""

#: of
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:16
msgid "`start_logits` (Tensor):"
msgstr ""

#: of
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:15
msgid ""
"A tensor of the input token classification logits, indicates the start "
"position of the labelled span. Its data type should be float32 and its "
"shape is [batch_size, sequence_length]."
msgstr ""

#: of
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:19
msgid "`end_logits` (Tensor):"
msgstr ""

#: of
#: paddlenlp.transformers.mpnet.modeling.MPNetForQuestionAnswering.forward:19
msgid ""
"A tensor of the input token classification logits, indicates the end "
"position of the labelled span. Its data type should be float32 and its "
"shape is [batch_size, sequence_length]."
msgstr ""

