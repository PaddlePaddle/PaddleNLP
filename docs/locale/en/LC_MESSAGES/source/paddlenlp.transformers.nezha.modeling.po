# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-24 16:20+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../source/paddlenlp.transformers.nezha.modeling.rst:2
msgid "modeling"
msgstr ""

#: of paddlenlp.transformers.nezha.modeling.NeZhaForMultipleChoice:1
#: paddlenlp.transformers.nezha.modeling.NeZhaForPretraining:1
#: paddlenlp.transformers.nezha.modeling.NeZhaForQuestionAnswering:1
#: paddlenlp.transformers.nezha.modeling.NeZhaForSequenceClassification:1
#: paddlenlp.transformers.nezha.modeling.NeZhaForTokenClassification:1
#: paddlenlp.transformers.nezha.modeling.NeZhaModel:1
msgid "基类：:class:`paddlenlp.transformers.nezha.modeling.NeZhaPretrainedModel`"
msgstr ""

#: of paddlenlp.transformers.nezha.modeling.NeZhaForMultipleChoice.forward:1
#: paddlenlp.transformers.nezha.modeling.NeZhaForPretraining.forward:1
#: paddlenlp.transformers.nezha.modeling.NeZhaForQuestionAnswering.forward:1
#: paddlenlp.transformers.nezha.modeling.NeZhaForSequenceClassification.forward:1
#: paddlenlp.transformers.nezha.modeling.NeZhaForTokenClassification.forward:1
#: paddlenlp.transformers.nezha.modeling.NeZhaModel.forward:1
#: paddlenlp.transformers.nezha.modeling.NeZhaPretrainingHeads.forward:1
msgid ""
"Defines the computation performed at every call. Should be overridden by "
"all subclasses."
msgstr ""

#: of paddlenlp.transformers.nezha.modeling.NeZhaForMultipleChoice.forward
#: paddlenlp.transformers.nezha.modeling.NeZhaForPretraining.forward
#: paddlenlp.transformers.nezha.modeling.NeZhaForQuestionAnswering.forward
#: paddlenlp.transformers.nezha.modeling.NeZhaForSequenceClassification.forward
#: paddlenlp.transformers.nezha.modeling.NeZhaForTokenClassification.forward
#: paddlenlp.transformers.nezha.modeling.NeZhaModel.forward
#: paddlenlp.transformers.nezha.modeling.NeZhaPretrainingHeads.forward
msgid "参数"
msgstr ""

#: of paddlenlp.transformers.nezha.modeling.NeZhaForMultipleChoice.forward:4
#: paddlenlp.transformers.nezha.modeling.NeZhaForPretraining.forward:4
#: paddlenlp.transformers.nezha.modeling.NeZhaForQuestionAnswering.forward:4
#: paddlenlp.transformers.nezha.modeling.NeZhaForSequenceClassification.forward:4
#: paddlenlp.transformers.nezha.modeling.NeZhaForTokenClassification.forward:4
#: paddlenlp.transformers.nezha.modeling.NeZhaModel.forward:4
#: paddlenlp.transformers.nezha.modeling.NeZhaPretrainingHeads.forward:4
msgid "unpacked tuple arguments"
msgstr ""

#: of paddlenlp.transformers.nezha.modeling.NeZhaForMultipleChoice.forward:6
#: paddlenlp.transformers.nezha.modeling.NeZhaForPretraining.forward:6
#: paddlenlp.transformers.nezha.modeling.NeZhaForQuestionAnswering.forward:6
#: paddlenlp.transformers.nezha.modeling.NeZhaForSequenceClassification.forward:6
#: paddlenlp.transformers.nezha.modeling.NeZhaForTokenClassification.forward:6
#: paddlenlp.transformers.nezha.modeling.NeZhaModel.forward:6
#: paddlenlp.transformers.nezha.modeling.NeZhaPretrainingHeads.forward:6
msgid "unpacked dict arguments"
msgstr ""

#: of paddlenlp.transformers.nezha.modeling.NeZhaPretrainedModel:1
msgid "基类：:class:`paddlenlp.transformers.model_utils.PretrainedModel`"
msgstr ""

#: of paddlenlp.transformers.nezha.modeling.NeZhaPretrainedModel.init_weights:1
msgid "Initialization hook"
msgstr ""

#: of paddlenlp.transformers.nezha.modeling.NeZhaPretrainingHeads:1
msgid "基类：:class:`paddle.fluid.dygraph.layers.Layer`"
msgstr ""

