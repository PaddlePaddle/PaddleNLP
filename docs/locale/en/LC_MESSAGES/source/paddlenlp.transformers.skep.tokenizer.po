# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-24 16:20+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../source/paddlenlp.transformers.skep.tokenizer.rst:2
msgid "tokenizer"
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer:1
msgid "基类：:class:`paddlenlp.transformers.tokenizer_utils.PretrainedTokenizer`"
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer:1
msgid ""
"Constructs an ERNIE tokenizer. It uses a basic tokenizer to do "
"punctuation splitting, lower casing and so on, and follows a WordPiece "
"tokenizer to tokenize as subwords."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.build_inputs_with_special_tokens
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.num_special_tokens_to_add
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.save_resources
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.tokenize
msgid "参数"
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer:5
msgid "file path of the vocabulary."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer:7
msgid ""
"Whether the text strips accents and convert to lower case. Defaults to "
"`True`."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer:10
msgid "The special token for unknown words. Defaults to \"[UNK]\"."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer:13
msgid "The special token for separator token. Defaults to \"[SEP]\"."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer:16
msgid "The special token for padding. Defaults to \"[PAD]\"."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer:19
msgid "The special token for cls. Defaults to \"[CLS]\"."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer:22
msgid "The special token for mask. Defaults to \"[MASK]\"."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer:27
msgid "实际案例"
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer.vocab_size:1
msgid ""
"return the size of vocabulary. :returns: the size of vocabulary. :rtype: "
"`int`"
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer.tokenize:1
msgid "End-to-end tokenization for ERNIE models."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer.tokenize:3
msgid "The text to be tokenized."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.build_inputs_with_special_tokens
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.num_special_tokens_to_add
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.tokenize
msgid "返回"
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer.tokenize:6
msgid "A list of string representing converted tokens."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.build_inputs_with_special_tokens
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.num_special_tokens_to_add
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.tokenize
msgid "返回类型"
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer.tokenize:7
msgid "List[`str`]"
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.num_special_tokens_to_add:1
msgid ""
"Returns the number of added tokens when encoding a sequence with special "
"tokens."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.num_special_tokens_to_add:5
msgid ""
"This encodes inputs and checks the number of added tokens, and is "
"therefore not efficient. Do not put this inside your training loop."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.num_special_tokens_to_add:8
msgid ""
"Returns the number of added tokens in the case of a sequence pair if set "
"to True, returns the number of added tokens in the case of a single "
"sequence if set to False. Defaults to False."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.num_special_tokens_to_add:13
msgid "Number of tokens added to sequences"
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.num_special_tokens_to_add:14
msgid "`int`"
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.build_inputs_with_special_tokens:1
msgid ""
"Build model inputs from a sequence or a pair of sequence for sequence "
"classification tasks by concatenating and adding special tokens."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.build_inputs_with_special_tokens:4
msgid ""
"A skep_ernie_1.0_large_ch/skep_ernie_2.0_large_en sequence has the "
"following format: ::"
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.build_inputs_with_special_tokens:9
msgid "A skep_roberta_large_en sequence has the following format: ::"
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.build_inputs_with_special_tokens:15
msgid "List of IDs to which the special tokens will be added."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.build_inputs_with_special_tokens:17
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences:15
msgid "Optional second list of IDs for sequence pairs. Defaults to `None`."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.build_inputs_with_special_tokens:21
msgid "List of input_id with the appropriate special tokens."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.build_inputs_with_special_tokens:22
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences:20
msgid "`List[int]`"
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences:1
msgid ""
"Create a mask from the two sequences passed to be used in a sequence-pair"
" classification task."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences:3
msgid ""
"A skep_ernie_1.0_large_ch/skep_ernie_2.0_large_en sequence pair mask has "
"the following format: ::"
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences:9
msgid ""
"If `token_ids_1` is `None`, this method only returns the first portion of"
" the mask (0s)."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences:11
msgid "note: There is no need token type ids for skep_roberta_large_ch model."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences:13
msgid "List of IDs."
msgstr ""

#: of
#: paddlenlp.transformers.skep.tokenizer.SkepTokenizer.create_token_type_ids_from_sequences:19
msgid "List of token_type_id according to the given sequence(s)."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer.save_resources:1
msgid "Save tokenizer related resources to files under `save_directory`."
msgstr ""

#: of paddlenlp.transformers.skep.tokenizer.SkepTokenizer.save_resources:3
msgid "Directory to save files into."
msgstr ""

