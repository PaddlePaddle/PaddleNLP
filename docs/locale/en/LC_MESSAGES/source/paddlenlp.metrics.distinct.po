# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-18 21:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../source/paddlenlp.metrics.distinct.rst:2
msgid "distinct"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:1
msgid "基类：:class:`paddle.metric.metrics.Metric`"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:1
msgid ""
"`Distinct` is an algorithm for evaluating the textual diversity of the "
"generated text by calculating the number of distinct n-grams. The larger "
"the number of distinct n-grams, the higher the diversity of the text. See"
" details at https://arxiv.org/abs/1510.03055."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:6
msgid ""
":class:`Distinct` could be used as a :class:`paddle.metric.Metric` class,"
" or an ordinary class. When :class:`Distinct` is used as a "
":class:`paddle.metric.Metric` class, a function is needed to transform "
"the network output to a string list."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct
#: paddlenlp.metrics.distinct.Distinct.add_inst
#: paddlenlp.metrics.distinct.Distinct.update
msgid "参数"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:11
msgid "Number of gram for :class:`Distinct` metric. Defaults to 2."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:13
msgid ""
"`trans_func` transforms the network output to a string list. Defaults to "
"None.  .. note::     When :class:`Distinct` is used as a "
":class:`paddle.metric.Metric`     class, `trans_func` must be provided. "
"Please note that the     input of `trans_func` is numpy array."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:13
msgid ""
"`trans_func` transforms the network output to a string list. Defaults to "
"None."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:16
msgid ""
"When :class:`Distinct` is used as a :class:`paddle.metric.Metric` class, "
"`trans_func` must be provided. Please note that the input of `trans_func`"
" is numpy array."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:20
msgid "Name of :class:`paddle.metric.Metric` instance. Defaults to \"distinct\"."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:25
msgid "实际案例"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:26
msgid "Using as a general evaluation object."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:38
msgid "Using as an instance of `paddle.metric.Metric`."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.update:1
msgid ""
"Updates the metrics states. This method firstly will use "
":meth:`trans_func` method to process the `output` to get the tokenized "
"candidate sentence list. Then call :meth:`add_inst` method to process the"
" candidate list one by one."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.update:6
msgid "The outputs of model."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.update:8
msgid "The additional inputs."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.add_inst:1
msgid "Updates the states based on the candidate."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.add_inst:3
msgid "Tokenized candidate sentence generated by model."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.reset:1
msgid "Resets states and result."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.accumulate:1
msgid "Calculates the final distinct score."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.accumulate
#: paddlenlp.metrics.distinct.Distinct.name
#: paddlenlp.metrics.distinct.Distinct.score
msgid "返回"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.accumulate:3
#: paddlenlp.metrics.distinct.Distinct.score:3
msgid "The final distinct score."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.accumulate
#: paddlenlp.metrics.distinct.Distinct.name
#: paddlenlp.metrics.distinct.Distinct.score
msgid "返回类型"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.score:1
msgid "The function is the same as :meth:`accumulate` method."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.name:1
msgid "Returns the metric name."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.name:3
msgid "The metric name."
msgstr ""

