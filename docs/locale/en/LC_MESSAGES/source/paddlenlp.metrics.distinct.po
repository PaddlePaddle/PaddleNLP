# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-04-07 11:40+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../../source/paddlenlp.metrics.distinct.rst:2
msgid "distinct"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:1
msgid "基类：:class:`paddle.metric.metrics.Metric`"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:1
msgid ""
"Distinct is an algorithm for evaluating the textual diversity of the "
"generated text by calculating the number of distinct n-grams. The larger "
"the value of n-grams, the higher the diversity of the text. See detail at"
" https://arxiv.org/abs/1510.03055"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:6
msgid ""
"`Distinct` could be used as `paddle.metric.Metric` class, or an ordinary "
"class. When `Distinct` is used as `paddle.metric.Metric` class. A "
"function is needed that transforms the network output to string list. It "
"should be noted that the `Distinct` here is different from the `Distinct`"
" calculated in prediction, and it is only for observation during training"
" and evaluation."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct
#: paddlenlp.metrics.distinct.Distinct.add_inst
msgid "参数"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:12
msgid ""
"`trans_func` transforms the network output to string list. Default None. "
"When `Distinct` is used as `paddle.metric.Metric` class, `trans_func` "
"must be provided. Please note that the input of `trans_func` is numpy "
"array."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:17
msgid "Number of gram for `Distinct` metric. Default: 2."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:19
msgid "Name of `paddle.metric.Metric` instance. Default: \"distinct\"."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:24
msgid "实际案例"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:25
msgid "1. Using as a general evaluation object. .. code-block:: python"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:28
msgid ""
"from paddlenlp.metrics import Distinct distinct = Distinct() cand = "
"[\"The\",\"cat\",\"The\",\"cat\",\"on\",\"the\",\"mat\"] "
"distinct.add_inst(cand) print(distinct.score()) # 0.8333333333333334"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct:34
msgid "Using as an instance of `paddle.metric.Metric`."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.update:1
msgid ""
"Update the metrics states. This method firstly will use `trans_func` to "
"process the `output` to get the tokenized candidate sentence list. Then "
"call `add_inst` to process the candidate list one by one."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.add_inst:1
msgid "Update the states based on the candidate."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.add_inst:3
msgid "Tokenized candidate sentence generated by model."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.reset:1
msgid "Reset states and result"
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.accumulate:1
msgid "Calculate the final distinct metric."
msgstr ""

#: of paddlenlp.metrics.distinct.Distinct.name:1
msgid "Returns metric name"
msgstr ""

