# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-19 14:17+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.1\n"

#: ../source/paddlenlp.transformers.rembert.tokenizer.rst:2
msgid "tokenizer"
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer:1
msgid "基类：:class:`paddlenlp.transformers.tokenizer_utils.PretrainedTokenizer`"
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer:1
msgid ""
"Construct a RemBertTokenizer. For more information regarding those "
"methods, please refer to this superclass."
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.build_inputs_with_special_tokens
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.convert_tokens_to_string
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.create_token_type_ids_from_sequences
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.get_special_tokens_mask
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.save_vocabulary
msgid "参数"
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer:4
msgid ""
"The vocabulary file path (ends with '.txt') required to instantiate a "
"`WordpieceTokenizer`."
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer:7
msgid ""
"Whether or not to lowercase the input when tokenizing. Defaults to "
"`False`."
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer:10
msgid ""
"A special token representing the *unknown (out-of-vocabulary)* token. An "
"unknown token is set to be `unk_token` inorder to be converted to an ID. "
"Defaults to \"[UNK]\"."
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer:14
msgid ""
"A special token separating two different sentences in the same input. "
"Defaults to \"[SEP]\"."
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer:17
msgid ""
"A special token used to make arrays of tokens the same size for batching "
"purposes. Defaults to \"[PAD]\"."
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer:20
msgid ""
"A special token used for sequence classification. It is the last token of"
" the sequence when built with special tokens. Defaults to \"[CLS]\"."
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer:23
msgid ""
"A special token representing a masked token. This is the token used in "
"the masked language modeling task which the model tries to predict the "
"original unmasked ones. Defaults to \"[MASK]\"."
msgstr ""

#: of paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer:29
msgid "实际案例"
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.convert_tokens_to_string:1
msgid ""
"Converts a sequence of tokens (list of string) to a single string by "
"using ``' '.join(tokens)`` ."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.convert_tokens_to_string:4
msgid "A sequence of tokens."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.build_inputs_with_special_tokens
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.convert_tokens_to_string
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.create_token_type_ids_from_sequences
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.get_special_tokens_mask
msgid "返回"
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.convert_tokens_to_string:7
msgid "Converted string."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.build_inputs_with_special_tokens
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.convert_tokens_to_string
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.create_token_type_ids_from_sequences
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.get_special_tokens_mask
msgid "返回类型"
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.build_inputs_with_special_tokens:1
msgid ""
"Build model inputs from a sequence or a pair of sequence for sequence "
"classification tasks by concatenating and adding special tokens. A "
"REMBERT sequence has the following format:"
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.build_inputs_with_special_tokens:4
msgid "single sequence: ``[CLS] X [SEP]``"
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.build_inputs_with_special_tokens:5
msgid "pair of sequences: ``[CLS] A [SEP] B [SEP]``"
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.build_inputs_with_special_tokens:7
msgid "List of IDs to which the special tokens will be added."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.build_inputs_with_special_tokens:9
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.create_token_type_ids_from_sequences:13
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.get_special_tokens_mask:6
msgid "Optional second list of IDs for sequence pairs."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.build_inputs_with_special_tokens:12
msgid ""
"List of `input IDs <../glossary.html#input-ids>`__ with the appropriate "
"special tokens."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.build_inputs_with_special_tokens:13
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.create_token_type_ids_from_sequences:18
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.get_special_tokens_mask:12
msgid ":obj:`List[int]`"
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.get_special_tokens_mask:1
msgid ""
"Retrieve sequence ids from a token list that has no special tokens added."
" This method is called when adding special tokens using the tokenizer "
"``prepare_for_model`` method."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.create_token_type_ids_from_sequences:11
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.get_special_tokens_mask:4
msgid "List of IDs."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.get_special_tokens_mask:8
msgid ""
"Whether or not the token list is already formatted with special tokens "
"for the model."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.get_special_tokens_mask:11
msgid ""
"A list of integers in the range [0, 1]: 1 for a special token, 0 for a "
"sequence token."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.create_token_type_ids_from_sequences:1
msgid ""
"Create a mask from the two sequences passed to be used in a sequence-pair"
" classification task. A RemBERT sequence pair mask has the following "
"format:"
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.create_token_type_ids_from_sequences:9
msgid ""
"If :obj:`token_ids_1` is :obj:`None`, this method only returns the first "
"portion of the mask (0s)."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.create_token_type_ids_from_sequences:16
msgid ""
"List of `token type IDs <../glossary.html#token-type-ids>`_ according to "
"the given sequence(s)."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.save_vocabulary:1
msgid ""
"Save all tokens to a vocabulary file. The file contains a token per line,"
" and the line number would be the index of corresponding token."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.save_vocabulary:4
msgid "File path to be saved to."
msgstr ""

#: of
#: paddlenlp.transformers.rembert.tokenizer.RemBertTokenizer.save_vocabulary:6
msgid "The `Vocab` or `dict` instance to be saved."
msgstr ""

