# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-16 16:04+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../source/paddlenlp.metrics.chunk.rst:2
msgid "chunk"
msgstr ""

#~ msgid "基类：:class:`paddle.metric.metrics.Metric`"
#~ msgstr ""

#~ msgid ""
#~ "ChunkEvaluator computes the precision, recall"
#~ " and F1-score for chunk detection. It"
#~ " is often used in sequence tagging"
#~ " tasks, such as Named Entity "
#~ "Recognition(NER)."
#~ msgstr ""

#~ msgid "参数"
#~ msgstr ""

#~ msgid "The label list."
#~ msgstr ""

#~ msgid ""
#~ "if set True, the label ends with"
#~ " '-B', '-I', '-E' or '-S', else "
#~ "the label starts with them."
#~ msgstr ""

#~ msgid ""
#~ "This API is advanced usage to "
#~ "accelerate metric calculating, calulations "
#~ "from outputs of model to the "
#~ "states which should be updated by "
#~ "Metric can be defined here, where "
#~ "Paddle OPs is also supported. Outputs"
#~ " of this API will be the inputs"
#~ " of \"Metric.update\"."
#~ msgstr ""

#~ msgid ""
#~ "If :code:`compute` is defined, it will"
#~ " be called with **outputs** of model"
#~ " and **labels** from data as "
#~ "arguments, all outputs and labels will"
#~ " be concatenated and flatten and each"
#~ " filed as a separate argument as "
#~ "follows: :code:`compute(output1, output2, ..., "
#~ "label1, label2,...)`"
#~ msgstr ""

#~ msgid ""
#~ "If :code:`compute` is not defined, "
#~ "default behaviour is to pass input "
#~ "to output, so output format will "
#~ "be: :code:`return output1, output2, ..., "
#~ "label1, label2,...`"
#~ msgstr ""

#~ msgid "see :code:`Metric.update`"
#~ msgstr ""

#~ msgid ""
#~ "This function takes (num_infer_chunks, "
#~ "num_label_chunks, num_correct_chunks) as input, "
#~ "to accumulate and update the "
#~ "corresponding status of the ChunkEvaluator "
#~ "object. The update method is as "
#~ "follows:"
#~ msgstr ""

#~ msgid ""
#~ "\\\\ \\begin{array}{l}{\\text { self. "
#~ "num_infer_chunks }+=\\text { num_infer_chunks "
#~ "}} \\\\ {\\text { self. num_Label_chunks"
#~ " }+=\\text { num_label_chunks }} \\\\ "
#~ "{\\text { self. num_correct_chunks }+=\\text"
#~ " { num_correct_chunks }}\\end{array} \\\\\n"
#~ "\n"
#~ msgstr ""

#~ msgid "The number of chunks in Inference on the given minibatch."
#~ msgstr ""

#~ msgid "The number of chunks in Label on the given mini-batch."
#~ msgstr ""

#~ msgid ""
#~ "The number of chunks both in "
#~ "Inference and Label on the given "
#~ "mini-batch."
#~ msgstr ""

#~ msgid ""
#~ "This function returns the mean "
#~ "precision, recall and f1 score for "
#~ "all accumulated minibatches."
#~ msgstr ""

#~ msgid "返回"
#~ msgstr ""

#~ msgid "mean precision, recall and f1 score."
#~ msgstr ""

#~ msgid "返回类型"
#~ msgstr ""

#~ msgid "Reset function empties the evaluation memory for previous mini-batches."
#~ msgstr ""

#~ msgid "Return name of metric instance."
#~ msgstr ""

