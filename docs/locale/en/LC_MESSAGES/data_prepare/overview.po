# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, PaddleNLP
# This file is distributed under the same license as the PaddleNLP package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleNLP \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-03-18 21:31+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.0\n"

#: ../data_prepare/overview.rst:3
msgid "整体介绍"
msgstr "Overview"

#: ../data_prepare/overview.rst:5
msgid "数据集和数据处理部分一直是NLP任务中最重要的环节之一。为了方便用户以更低的学习成本完成这一环节，PaddleNLP提供了以下特性："
msgstr "Dataset and data processing are an important part of NLP tasks. To make these tasks simplier, PaddleNLP provides the following features:"

#: ../data_prepare/overview.rst:7
msgid "功能强大的API。可以帮助用户完成大部分常见NLP任务的数据处理流程。"
msgstr "Powerful API. It can facilitate users to fulfill the most of common NLP data processing tasks."

#: ../data_prepare/overview.rst:8
msgid "更灵活的封装。各个模块保持低耦合，高内聚，保证用户可以通过继承和改写满足特定的数据处理需求。"
msgstr "Flixible encapsulation. Each module maintains low coupling and high cohension so that it ensures that users can meet the needs of specific data processing through inheritance and override."

#: ../data_prepare/overview.rst:9
msgid "内置数据集涵盖大部分NLP任务，搭配简洁易用的数据集加载协议和贡献协议。对新手和社区贡献者更加友好。"
msgstr "The build-in data cover most of NLP tasks, combined with easy-to-use policies for data loading and contribution. It is user-friendly for beginners and contributors."

#: ../data_prepare/overview.rst:12
msgid "核心API"
msgstr "Core API"

#: ../data_prepare/overview.rst:14
msgid ""
":func:`load_dataset` ：数据集快速加载接口，通过传入数据集读取脚本的名称和其他参数调用 "
":class:`DatasetBuilder` 子类的相关方法生成数据集。关于加载数据集的详细方法，请查阅 :doc:`加载数据集 "
"<./dataset_load>` 。"
msgstr ""
":func:`load_dataset` ：Interface for dataset loading, it can be called by passing in script name and other arguments."
":class:`DatasetBuilder` It contains relevant methods for dataset building. For more details, please refer to :doc:`Dataset Loading <./dataset_load>` 。"

#: ../data_prepare/overview.rst:15
msgid ""
":class:`DatasetBuilder` ： :class:`DatasetBuilder` "
"是一个基类，所有的内置数据集都继承自该类，该类的主要功能是下载和读取数据集文件并生成Dataset。其中大部分方法已经封装，不对贡献者暴露。贡献者通过重写"
" :func:`_get_data` 和 :func:`_read` 等方法像社区贡献数据集。详细信息请查阅 :doc:`如何贡献数据集 "
"</community/contribute_dataset>` 。"
msgstr ""
":class:`DatasetBuilder` ： :class:`DatasetBuilder` "
"It is a base class, all the built-in datasets are inherited from this class, its main function is to download and read dataset files and generate Dataset objects. Most of the methods are encapsulated. Contributors need to override "
" :func:`_get_data` and :func:`_read` to contribute to the datasets to the community. For more details please refer to  :doc:`How to contribute dataset </community/contribute_dataset>` ."

#: ../data_prepare/overview.rst:16
msgid ""
":class:`MapDataset/IterDataset` ：PaddleNLP内置数据集类型，分别是对 "
":class:`paddle.io.Dataset` 和 :class:`paddle.io.IterableDataset` 的扩展。内置诸如 "
":func:`map` , :func:`filter` "
"等适用于NLP任务的数据处理功能。同时还能帮助用户简单创建自定义数据集。详细信息请查阅***和 :doc:`如何自定义数据集 "
"<./dataset_self_defined>` 。"
msgstr ""
":class:`MapDataset/IterDataset` ：PaddleNLP built-in types of dataset,  it extends the"
":class:`paddle.io.Dataset` and :class:`paddle.io.IterableDataset` . They have methods like :func:`map` , :func:`filter` "
"which are built for data processing functionalities. By using it, users can also create customized datasets. For more details please refer to *** :doc:`How to define a customized dataset "
"<./dataset_self_defined>` ."

#: ../data_prepare/overview.rst:19
msgid "数据处理流程设计"
msgstr "Design of data processing flow"

#: ../data_prepare/overview.rst:21
msgid "目前PaddleNLP的通用数据处理流程如下："
msgstr "Currently, PaddleNLP has the generic data processing flow as below:"

#: ../data_prepare/overview.rst:23
msgid "加载数据集（内置数据集或者自定义数据集，数据集返回 **原始数据**）。"
msgstr "Loading datasets(for the built-in datasets or custom datasets, it returns **raw data**)."

#: ../data_prepare/overview.rst:24
msgid ""
"定义 :func:`trans_func` ，包括tokenize，token to id等操作，并传入数据集的 :func:`map` "
"方法，将原始数据转为 *feature* 。"
msgstr ""
"Define :func:`trans_func` ，tokenize，token-to-id etc. and pass in the  :func:`map` method, to convert the raw data to features."

#: ../data_prepare/overview.rst:25
msgid "根据上一步数据处理的结果定义 **batchify** 方法和 :class:`BatchSampler` 。"
msgstr "Define **batchify** according to the results from the last step and  :class:`BatchSampler`."

#: ../data_prepare/overview.rst:26
msgid "定义 :class:`DataLoader` ， 传入 :class:`BatchSampler` 和 :func:`batchify_fn` 。"
msgstr "Define  :class:`DataLoader` , pass in :class:`BatchSampler` and :func:`batchify_fn` ."

#: ../data_prepare/overview.rst:28
msgid "下面是基于Bert的文本分类任务的数据处理流程图："
msgstr "Below is the data processing flow diagram for Bert text classification task."

#: ../data_prepare/overview.rst:32
msgid "关于数据处理的详细信息，请查阅 :doc:`./data_preprocess` 。"
msgstr "For the details of data processing, please refer to  :doc:`./data_preprocess` ."

